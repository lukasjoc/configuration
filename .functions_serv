jochamlu::kaizen ~$ l
-bash: l: command not found
jochamlu::kaizen ~$ ls
Applications/           Downloads/              Movies/                 Postman/                Untitled/               fun/
Desktop/                Games/                  Music/                  Public/                 VirtualBoxVMs/          shsgfhasgdfjhsgfkhjagf/
Documents/              Library/                Pictures/               UNLICENSE               Zotero/
jochamlu::kaizen ~$ ll
total 528
drwxr-xr-x+ 67 jochamlu  staff   2.1K Jul 10 15:18 ./
drwxr-xr-x   5 root      admin   160B Mar 17 15:52 ../
-r--------   1 jochamlu  staff     7B Apr  5 18:02 .CFUserTextEncoding
-rw-r--r--@  1 jochamlu  staff    14K Jul 10 10:57 .DS_Store
-rw-r--r--   1 jochamlu  staff   2.2K Jun 29 00:45 .Rhistory
drwx------   2 jochamlu  staff    64B Jul  3 21:29 .Trash/
-rw-r--r--   1 jochamlu  staff    95B Apr  5 19:11 .Xmodmap
drwxr-x---@  4 jochamlu  staff   128B Jul  3 21:40 .android/
-rw-------   1 jochamlu  staff   130K Jul 10 12:18 .bash_history
-rw-r--r--   1 jochamlu  staff    34B Jun 19 19:06 .bash_profile
drwx------  19 jochamlu  staff   608B Jul 10 12:18 .bash_sessions/
-rw-r--r--   1 jochamlu  staff   1.3K Jun 26 11:57 .bashrc
drwxr-xr-x  20 jochamlu  staff   640B May 23 11:19 .byobu/
drwxr-xr-x   5 jochamlu  staff   160B Jun 20 13:27 .cache/
drwxr-xr-x   7 jochamlu  staff   224B May 24 19:04 .cargo/
drwxr-xr-x  11 jochamlu  staff   352B Jul 10 10:27 .config/
drwxr-xr-x   5 jochamlu  staff   160B Jul  8 19:41 .docker/
drwxr-xr-x   9 jochamlu  staff   288B Jun 28 13:30 .envm/
drwxr-xr-x   4 jochamlu  staff   128B Jun 28 15:27 .gem/
-rwxr-xr-x   1 jochamlu  staff   397B Jun 26 10:30 .gitconfig*
-rw-r--r--   1 jochamlu  staff   728B Jun 26 14:39 .gitignore
jochamlu::kaizen fun$ l
-bash: l: command not found
jochamlu::kaizen fun$ ss^C
jochamlu::kaizen fun$ tmux 


















































































        docker volume prune -f                                                                                                                                                                                    [0/1861]
        docker network prune -f                                                                                                                                                                                           
        docker rmi "$(docker images -aq)"
}

# get current status of git repo
# SRC: http://ezprompt.net/
parse_git_dirty() {
        local status untracked ahead newfile renamed deleted bits
        status=$(git status 2>&1 | tee)
        dirty=$(echo -n "${status}" 2>/dev/null | grep "modified:" &>/dev/null; echo "$?")
        untracked=$(echo -n "${status}" 2>/dev/null | grep "Untracked files" &>/dev/null; echo "$?")
        ahead=$(echo -n "${status}" 2>/dev/null | grep "Your branch is ahead of" &>/dev/null; echo "$?")
        newfile=$(echo -n "${status}" 2>/dev/null | grep "new file:" &>/dev/null; echo "$?")
        renamed=$(echo -n "${status}" 2>/dev/null | grep "renamed:" &>/dev/null; echo "$?")
        deleted=$(echo -n "${status}" 2>/dev/null | grep "deleted:" &>/dev/null; echo "$?")
        bits=''

        if [ "${renamed}" == "0" ]; then
                bits="+-${bits}"
        fi
        if [ "${ahead}" == "0" ]; then
                bits="^${bits}"
        fi
        if [ "${newfile}" == "0" ]; then
                bits="++${bits}"
        fi
        if [ "${untracked}" == "0" ]; then
                bits="*${bits}"
        fi
        if [ "${deleted}" == "0" ]; then
                bits="-${bits}"
        fi
        if [ "${dirty}" == "0" ]; then
                bits="*${bits}"
        fi
        if [ ! "${bits}" == "" ]; then
                echo " ${bits}"
        else
                echo ""
        fi

}


# get current branch in git repo
# SRC: http://ezprompt.net/
parse_git_branch() {
        branch=$(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
        if [ -n "${branch}" ]; then
                local stat
                stat=$(parse_git_dirty)
                echo "(${branch}${stat}) $ "
        else
                echo ""
        fi
}

# quick alias to cd into working dir
fun() {
        cd "$ENVM_WDIR" || return
}

# quick alias to cd into working dir
fn() {
        cd "$ENVM_WDIR" || return
}

# reload $SHELL with -
ns() {
        exec "$SHELL" -l
}

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Setup promt like this: (user)::(hostname) (PWD)$ ((branch) (status))
export PS1="\[\e[1;32m\]\u\[\e[m\]::\[\e[1;31m\]\h\[\e[m\] \[\e[1;10m\]\W\[\e[m\]\\$ \[\e[1;36m\]\`parse_git_branch\`\[\e[m\]"
